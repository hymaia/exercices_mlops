from sklearn.metrics import (
    mean_absolute_error,
    mean_squared_error,
    mean_absolute_percentage_error,
)
import pandas as pd
import numpy as np


def split_train_and_val_sets(df_train_val: pd.DataFrame) -> tuple:
    """
    Splits the train dataset into train and validation sets
    :param df_train_val: (Dataframe) containing both the input features and the target
    :return:
    """
    df_train = df_train_val[df_train_val["Date"] <= "2010-12-31"]
    df_val = df_train_val[df_train_val["Date"] >= "2011-01-01"]
    x_train = df_train.drop(columns=["Weekly_Sales"])
    x_val = df_val.drop(columns=["Weekly_Sales"])
    y_train = df_train["Weekly_Sales"]
    y_val = df_val["Weekly_Sales"]

    return x_train, x_val, y_train, y_val


def compute_metrics(y: pd.Series, pred: pd.Series, set="train"):
    """
    Computes the main regression metrics
    :param y: (Series) containing the target
    :param pred: (Series) containing the predictions generated by the model
    :return: (no return)
    """
    mae = mean_absolute_error(y, pred)
    mse = mean_squared_error(y, pred)
    mape = mean_absolute_percentage_error(y, pred)
    print(f"Mean Absolute Error ({set}) : {np.round(mae, 0)}")
    print(f"Mean Square Error ({set}) : {np.round(mse, 0)}")
    print(f"Mean Absolute Percentage Error ({set}): {np.round(100 * mape, 2)} pct")

    # TODO : exercice 3.3 : ajoutez les hyper-param√®tres dans MLflow
    # ------------------------------------------------------------------------------------
    #
    #
    # ------------------------------------------------------------------------------------
